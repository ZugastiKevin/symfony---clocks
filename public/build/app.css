/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
main #home {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  width: 100%;
  margin-top: 0;
  margin-bottom: 4rem;
}
main #home .hero {
  position: relative;
  width: 100%;
  height: 70vh;
  overflow: hidden;
}
main #home .hero #background-video {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 70vh;
  object-fit: cover;
  z-index: -1;
}
main #home .hero .overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 70vh;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1;
}
main #home .hero .hero-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: #F1E0C6;
  z-index: 2;
}
main #home .hero .hero-content h1 {
  color: inherit;
}
main #home .cards-container {
  width: 80%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 1.5rem;
  margin-top: 2rem;
}
main #home .cards-container .card {
  width: 45%;
  min-height: 600px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  border: 2px solid #C1A15A;
  border-left: none;
  border-right: none;
  border-radius: 1rem;
  box-shadow: 0 -10px 10px -10px rgba(0, 0, 0, 0.3), 0 10px 10px -10px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease;
}
main #home .cards-container .card a {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card a .card-title {
  position: relative;
  padding: 0 1rem;
  border-bottom: 2px solid #5A5A5A;
  border-radius: 15px;
}
main #home .cards-container .card a .card-title::after {
  content: " ";
  position: absolute;
  left: 50%;
  bottom: -1px;
  width: 100%;
  height: 2px;
  padding: 0 2rem;
  border-bottom: 2px solid #5A5A5A;
  transform: translateX(-50%);
}
main #home .cards-container .card a .card-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card a .card-content .card-img-container {
  min-width: 320px;
  width: 100%;
  overflow: hidden;
  height: 320px;
  overflow: hidden;
  border-left: 3px solid;
  border-right: 3px solid;
  border-radius: 1rem;
  border-color: #C1A15A;
}
main #home .cards-container .card a .card-content .card-type {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card a .card-content .card-type .first-type {
  color: #C1A15A;
  border-bottom: 2px solid #C1A15A;
}
main #home .cards-container .card a .card-content .card-type .subing-type {
  padding: 0 1rem;
  border-radius: 10px;
  border-bottom: 2px solid #5A5A5A;
}
main #home .cards-container .card .card-option {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card:hover {
  transform: translateY(-5px);
}

@media screen and (min-width: 1921px) {
  main #home .banner {
    width: 60%;
  }
  main #home .cards-container {
    width: 60%;
  }
  main #home .cards-container .card a .card-content .card-img-container {
    min-width: 340px;
  }
}
@media screen and (max-width: 768px) {
  main #home .hero {
    height: 65vh;
  }
  main #home .hero #background-video {
    height: 65vh;
  }
  main #home .hero .overlay {
    height: 65vh;
  }
  main #home .hero .hero-content {
    width: 95%;
  }
  main #home .cards-container {
    width: 100%;
  }
  main #home .cards-container .card {
    width: 100%;
  }
}
main #clocks {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-top: 10rem;
  margin-bottom: 4rem;
}
main #clocks .cards-container {
  width: 80%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 1.5rem;
  margin-top: 2rem;
}
main #clocks .cards-container .card {
  width: 45%;
  min-height: 600px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  border: 2px solid #C1A15A;
  border-left: none;
  border-right: none;
  border-radius: 1rem;
  box-shadow: 0 -10px 10px -10px rgba(0, 0, 0, 0.3), 0 10px 10px -10px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease;
}
main #clocks .cards-container .card a {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #clocks .cards-container .card a .card-title {
  position: relative;
  padding: 0 1rem;
  border-bottom: 2px solid #5A5A5A;
  border-radius: 15px;
}
main #clocks .cards-container .card a .card-title::after {
  content: " ";
  position: absolute;
  left: 50%;
  bottom: -1px;
  width: 100%;
  height: 2px;
  padding: 0 2rem;
  border-bottom: 2px solid #5A5A5A;
  transform: translateX(-50%);
}
main #clocks .cards-container .card a .card-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #clocks .cards-container .card a .card-content .card-img-container {
  min-width: 320px;
  width: 100%;
  overflow: hidden;
  height: 320px;
  overflow: hidden;
  border-left: 3px solid;
  border-right: 3px solid;
  border-radius: 1rem;
  border-color: #C1A15A;
}
main #clocks .cards-container .card a .card-content .card-type {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #clocks .cards-container .card a .card-content .card-type .first-type {
  color: #C1A15A;
  border-bottom: 2px solid #C1A15A;
}
main #clocks .cards-container .card a .card-content .card-type .subing-type {
  padding: 0 1rem;
  border-radius: 10px;
  border-bottom: 2px solid #5A5A5A;
}
main #clocks .cards-container .card .card-option {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #clocks .cards-container .card:hover {
  transform: translateY(-5px);
}

@media screen and (min-width: 1921px) {
  main #clocks .cards-container {
    width: 60%;
  }
  main #clocks .cards-container .card a .card-content .card-img-container {
    min-width: 340px;
  }
}
@media screen and (max-width: 850px) {
  main #clocks .cards-container .card a .card-content .card-img-container {
    min-width: 295px;
  }
}
@media screen and (max-width: 768px) {
  main #clocks .cards-container {
    width: 100%;
  }
  main #clocks .cards-container .card {
    width: 100%;
  }
  main #clocks .cards-container .card a .card-content .card-img-container {
    min-width: none;
  }
}
main #clock {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100vh;
  margin-bottom: 4rem;
}
main #clock .card-container {
  width: 80%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1.5rem;
  margin-top: 2rem;
  text-align: center;
}
main #clock .card-container .modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.6);
}
main #clock .card-container .modal .modal-content {
  background-color: #fff;
  color: #000;
  margin: 10% auto;
  padding: 2rem;
  border-radius: 8px;
  width: 80%;
  max-width: 500px;
  position: relative;
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);
}
main #clock .card-container .modal .modal-content .close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 1.5rem;
  cursor: pointer;
  font-weight: bold;
}
main #clock .card-container .card-title {
  position: relative;
  padding: 0 1rem;
  border-bottom: 2px solid #C1A15A;
  border-radius: 15px;
}
main #clock .card-container .card-title h2 {
  color: #C1A15A;
  border-bottom: 2px solid #C1A15A;
  border-radius: 15px;
  margin-bottom: 1rem;
}
main #clock .card-container .card-title .card-type {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}
main #clock .card-container .card-title .card-type .card-discover p {
  margin: 0;
  padding: 0 0.5rem;
  color: #F1E0C6;
  border-left: 1px solid #C1A15A;
  border-right: 1px solid #C1A15A;
}
main #clock .card-container .card-title .card-type .subing-type {
  margin-top: 1rem;
  padding: 0 1rem;
  border-radius: 10px;
  border-bottom: 2px solid #C1A15A;
}
main #clock .card-container .card-title::after {
  content: " ";
  position: absolute;
  left: 50%;
  bottom: -1px;
  width: 100%;
  height: 2px;
  padding: 0 2rem;
  border-bottom: 2px solid #C1A15A;
  transform: translateX(-50%);
}
main #clock .card-container .card-content {
  width: 80%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #clock .card-container .card-content .card-img-container {
  min-width: 320px;
  width: 80%;
  overflow: hidden;
  max-height: 950px;
  border-left: 3px solid;
  border-right: 3px solid;
  border-radius: 1rem;
  border-color: #C1A15A;
}
main #clock .card-option {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

@media screen and (min-width: 1921px) {
  main #clocks .cards-container {
    width: 60%;
  }
  main #clocks .cards-container .card a .card-content .card-img-container {
    min-width: 340px;
  }
}
@media screen and (max-width: 850px) {
  main #clocks .cards-container .card a .card-content .card-img-container {
    min-width: 295px;
  }
}
@media screen and (max-width: 768px) {
  main #clocks .cards-container {
    width: 100%;
  }
  main #clocks .cards-container .card {
    width: 100%;
  }
  main #clocks .cards-container .card a .card-content .card-img-container {
    min-width: none;
  }
}
#header {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  width: 100%;
  display: flex;
  justify-content: center;
  background: linear-gradient(to bottom, rgb(0, 0, 0) 0%, rgb(0, 0, 0) 80%, transparent);
}
#header .header {
  width: 100%;
  max-height: 158px;
}
#header .header .logo-container {
  position: absolute;
  top: 15px;
  left: 20px;
  width: 7%;
  min-width: 70px;
  display: flex;
  justify-content: center;
  align-items: center;
}
#header .header .list-container {
  position: absolute;
  top: -8px;
  right: 40px;
  display: flex;
  justify-content: space-between;
  gap: 3rem;
}
#header .header .list-container .left-list, #header .header .list-container .center-list, #header .header .list-container .right-list {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
}
#header .header .list-container .left-list + .center-list + .right-list, #header .header .list-container li .nav-btn {
  border-top: none;
  border-top-right-radius: 0;
  border-top-left-radius: 0;
}
#header .header .burger-toggle {
  display: none;
}
#header .header .burger {
  display: none;
  flex-direction: column;
  justify-content: space-between;
  width: 25px;
  height: 20px;
  cursor: pointer;
  z-index: 20;
}
#header .header .burger span {
  display: block;
  height: 3px;
  background: #F1E0C6;
  border-radius: 2px;
  transition: 0.3s ease;
}
#header .header .burger-container {
  display: none;
}
#header .header .burger-toggle:checked + .burger + .burger-container {
  display: none;
}

@media screen and (min-width: 1921px) {
  #header .header .logo-container {
    width: 3%;
  }
}
@media screen and (max-width: 768px) {
  #header {
    min-height: 8vh;
  }
  #header .header {
    background: rgba(0, 0, 0, 0.8);
  }
  #header .header .logo-container {
    max-width: 144px;
    max-height: 144px;
  }
  #header .header .list-container {
    display: none;
  }
  #header .header .burger {
    position: absolute;
    top: 55px;
    right: 40px;
    display: flex;
  }
  #header .header .burger-container {
    position: absolute;
    top: -8px;
    right: 0%;
    width: 85%;
    display: none;
    justify-content: space-evenly;
    gap: 1rem;
  }
  #header .header .burger-container .burger-left-list, #header .header .burger-container .burger-center-list, #header .header .burger-container .burger-right-list {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 1.1rem;
  }
  #header .header .burger-container .burger-left-list + .burger-center-list + .burger-right-list, #header .header .burger-container li:first-child .nav-btn {
    border-top: none;
    border-top-right-radius: 0;
    border-top-left-radius: 0;
  }
  #header .header .burger-toggle:checked + .burger + .burger-container {
    display: flex;
  }
}
@media screen and (max-width: 525px) {
  #header .header .burger {
    right: 10px;
  }
  #header .header .burger-container {
    width: 100%;
  }
  #header .header .burger-toggle:checked + .burger + .burger-container {
    display: flex;
  }
  #header .header .burger-toggle:checked ~ .logo-container {
    display: none;
  }
}
@media screen and (max-width: 453px) {
  #header .header .burger-container {
    font-size: 0.8rem;
    justify-content: center;
    gap: inherit;
  }
  #header .header .burger-container .burger-left-list, #header .header .burger-container .burger-center-list, #header .header .burger-container .burger-right-list {
    gap: 1.2rem;
  }
}
.nav-btn {
  padding: 0.5rem 1rem;
  background-color: transparent;
  color: #C1A15A;
  border-radius: 1rem;
  border: none;
  transition: all 0.2s ease-out;
  border: 2px solid #C1A15A;
}

.nav-btn:hover {
  background-color: #5A5A5A;
}

button, .button {
  padding: 0.75rem 1.5rem;
  background-color: #C1A15A;
  color: white;
  border: none;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
button:hover, .button:hover {
  background-color: rgb(185.1343612335, 149.2295154185, 69.5656387665);
}

@media screen and (max-width: 603px) {
  .nav-btn {
    padding: 0.5rem 0.5rem;
  }
}
.form-container {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.form-container form {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 2rem;
  background-color: #f4f4f4;
  border-radius: 1rem;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}
.form-container form label {
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #5A5A5A;
  display: block;
}
.form-container form input[type=text],
.form-container form input[type=email],
.form-container form input[type=number],
.form-container form input[type=password],
.form-container form input[type=file],
.form-container form textarea,
.form-container form select {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid #5A5A5A;
  border-radius: 8px;
  background-color: white;
  font-size: 1rem;
  transition: border-color 0.3s ease;
}
.form-container form input[type=text]:focus,
.form-container form input[type=email]:focus,
.form-container form input[type=number]:focus,
.form-container form input[type=password]:focus,
.form-container form input[type=file]:focus,
.form-container form textarea:focus,
.form-container form select:focus {
  border-color: #C1A15A;
  outline: none;
}
.form-container form input[type=checkbox],
.form-container form input[type=radio] {
  margin-right: 0.5rem;
}
.form-container form .form-check {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.form-container form .form-error {
  color: #e74c3c;
  font-size: 0.875rem;
  margin-top: 0.25rem;
}

* {
  box-sizing: border-box;
}

body {
  position: relative;
  margin: 0px auto;
  font-family: "Playfair Display", serif;
  background: #F4F4F4;
  background: linear-gradient(0deg, rgb(244, 244, 244) 0%, rgb(244, 244, 244) 60%, rgb(17, 17, 17) 100%);
  background-repeat: no-repeat;
  color: #222;
}

section {
  margin-top: 4rem;
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

h1, h2, h3 {
  margin: 0;
  font-family: "Bodoni Moda", serif;
  color: #222;
}

ul {
  list-style: none;
  padding-left: 0px;
}

a {
  text-decoration: none;
}

#loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(83, 79, 79, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.lottie-container {
  width: 150px;
  height: 150px;
}

.container {
  width: 80%;
}

.form-container {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 3rem;
}
.form-container form {
  width: 30%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 2rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/