/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
main #home {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  width: 100%;
  margin-top: 0;
  margin-bottom: 4rem;
}
main #home .hero {
  position: relative;
  width: 100%;
  height: 45vh;
  overflow: hidden;
}
main #home .hero #background-video {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 45vh;
  object-fit: cover;
  z-index: -1;
}
main #home .hero .overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 45vh;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1;
}
main #home .hero .hero-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: #F1E0C6;
  z-index: 2;
}
main #home .hero .hero-content h1 {
  color: inherit;
}
main #home .cards-container {
  width: 80%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 1.5rem;
  margin-top: 2rem;
}
main #home .cards-container .card {
  width: 45%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  border: 2px solid #C1A15A;
  border-left: none;
  border-right: none;
  border-radius: 1rem;
  box-shadow: 0 -10px 10px -10px rgba(0, 0, 0, 0.3), 0 10px 10px -10px rgba(0, 0, 0, 0.3);
  transition: transform 0.3s ease;
}
main #home .cards-container .card a {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card a .card-title {
  position: relative;
  padding: 0 1rem;
  border-bottom: 2px solid #5A5A5A;
  border-radius: 10px;
}
main #home .cards-container .card a .card-title::after {
  content: " ";
  position: absolute;
  left: 50%;
  bottom: -1px;
  width: 140%;
  height: 2px;
  border-bottom: 2px solid #5A5A5A;
  transform: translateX(-50%);
}
main #home .cards-container .card a .card-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card a .card-content .card-img-container {
  min-width: 260px;
  width: 100%;
  overflow: hidden;
  height: 200px;
  overflow: hidden;
  border-left: 3px solid;
  border-right: 3px solid;
  border-radius: 1rem;
  border-color: #C1A15A;
}
main #home .cards-container .card a .card-content .card-type {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card a .card-content .card-type .first-type {
  color: #C1A15A;
  border-bottom: 2px solid #C1A15A;
}
main #home .cards-container .card a .card-content .card-type .subing-type {
  padding: 0 1rem;
  border-radius: 10px;
  border-bottom: 2px solid #5A5A5A;
}
main #home .cards-container .card .card-option {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
main #home .cards-container .card:hover {
  transform: translateY(-5px);
}

@media screen and (min-width: 1921px) {
  main #home .banner {
    width: 60%;
  }
  main #home .cards-container {
    width: 60%;
  }
  main #home .cards-container .card a .card-content .card-img-container {
    min-width: 340px;
  }
}
@media screen and (max-width: 768px) {
  main #home .hero {
    height: 65vh;
  }
  main #home .hero #background-video {
    height: 65vh;
  }
  main #home .hero .overlay {
    height: 65vh;
  }
  main #home .hero .hero-content {
    width: 95%;
  }
  main #home .cards-container {
    width: 100%;
  }
  main #home .cards-container .card {
    width: 100%;
  }
}
@keyframes show-content {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes dont-show-content {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
#header {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  width: 100%;
  display: flex;
  justify-content: center;
}
#header .header {
  width: 100%;
  max-height: 158px;
  background-color: transparent;
}
#header .header .logo-container {
  position: absolute;
  top: 15px;
  left: 20px;
  width: 7%;
  min-width: 70px;
  display: flex;
  justify-content: center;
  align-items: center;
}
#header .header .list-container {
  position: absolute;
  top: -8px;
  right: 40px;
  display: flex;
  justify-content: space-between;
  gap: 3rem;
}
#header .header .list-container .left-list {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
}
#header .header .list-container .center-list {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
}
#header .header .list-container .right-list {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
}
#header .header .burger-toggle {
  display: none;
}
#header .header .burger {
  display: none;
  flex-direction: column;
  justify-content: space-between;
  width: 25px;
  height: 20px;
  cursor: pointer;
  z-index: 20;
}
#header .header .burger span {
  display: block;
  height: 3px;
  background: #F1E0C6;
  border-radius: 2px;
  transition: 0.3s ease;
}
#header .header .burger-toggle:checked + .burger + .burger-container {
  display: flex;
}

@media screen and (min-width: 1921px) {
  #header .header .logo-container {
    width: 3%;
  }
}
@media screen and (max-width: 768px) {
  #header {
    min-height: 8vh;
  }
  #header .header .logo-container {
    max-width: 144px;
    max-height: 144px;
  }
  #header .header .list-container {
    display: none;
  }
  #header .header .burger {
    position: absolute;
    top: 55px;
    right: 40px;
    display: flex;
  }
  #header .header .burger-container {
    position: absolute;
    top: -8px;
    right: 40px;
    display: none;
    justify-content: space-between;
    gap: 3rem;
  }
  #header .header .burger-container .burger-left-list {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }
  #header .header .burger-container .burger-center-list {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }
  #header .header .burger-container .burger-center-list li .nav-btn {
    border: 2px solid #C1A15A;
  }
  #header .header .burger-container .burger-center-list li:first-child .nav-btn {
    border: 2px solid #C1A15A;
    border-top: none;
    border-top-right-radius: 0;
    border-top-left-radius: 0;
  }
  #header .header .burger-container .burger-right-list {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }
}
.nav-btn {
  padding: 0.5rem 1rem;
  background-color: transparent;
  color: #C1A15A;
  border-radius: 1rem;
  border: none;
  transition: all 0.2s ease-out;
}

.nav-btn:hover {
  background-color: #5A5A5A;
}

* {
  box-sizing: border-box;
}

body {
  position: relative;
  margin: 0px auto;
  font-family: "Playfair Display", serif;
  background: #F4F4F4;
  background: linear-gradient(0deg, rgb(244, 244, 244) 0%, rgb(244, 244, 244) 60%, rgb(17, 17, 17) 100%);
  color: #222;
}

section {
  margin-top: 4rem;
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

h1, h2, h3 {
  margin: 0;
  font-family: "Bodoni Moda", serif;
  color: #222;
}

ul {
  list-style: none;
  padding-left: 0px;
}

a {
  text-decoration: none;
}

#loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(83, 79, 79, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.lottie-container {
  width: 150px;
  height: 150px;
}

.container {
  width: 80%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/